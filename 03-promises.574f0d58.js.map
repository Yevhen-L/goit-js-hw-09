{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAGPQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASC,KAAKC,SAAShB,MAAMiB,OAC1CC,EAAYJ,SAASC,KAAKC,SAASG,KAAKF,OACxCG,EAASN,SAASC,KAAKC,SAASI,OAAOH,OAEpCI,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BvB,EAAcuB,EAAI,EADGR,EAAaQ,EAAIH,GAEnCI,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OACpE4B,QAAMC,IAAI,uBAAwCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE3D8B,OAAM,SAAAP,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOM,QAAQ,sBAAuCJ,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OACnE4B,QAAMC,IAAI,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n// import * as notiflix from \"notiflix\";\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(this.elements.delay.value);\n  const delayStep = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = firstDelay + i * delayStep;\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelay","parseInt","this","elements","value","delayStep","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.574f0d58.js.map"}